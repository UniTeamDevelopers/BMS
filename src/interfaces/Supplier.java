/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import bms.connectionClass;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class Supplier extends javax.swing.JInternalFrame {

    private DefaultTableModel model;
    private String clickValue;

    /**
     * Creates new form Supplier
     */
    public Supplier() throws Exception {
        initComponents();
        showSupplierTable();
        l4.setRowHeight(40);
        l4.setFont(new Font("Serif", Font.BOLD, 20));
    }

    public void showSupplierTable() throws Exception {
        connectionClass showSupplier = new connectionClass();
        showSupplier.connect();
        try {
            showSupplier.systemConnection();
            showSupplier.rs = showSupplier.stmt.executeQuery("select * from supplier");
            while (showSupplier.rs.next()) {
                int id = showSupplier.rs.getInt(1);
                String sName = showSupplier.rs.getString(2);
                int tele = showSupplier.rs.getInt(3);
                String address = showSupplier.rs.getString(4);
                int accNum = showSupplier.rs.getInt(5);
                System.out.println(id + " " + sName + " " + tele + " " + address +" "+accNum);
                Object[] content = {id, sName, tele, address,accNum};
                model = (DefaultTableModel) l4.getModel();
                model.addRow(content);
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        l4 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtAcc_Number = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        i1 = new javax.swing.JLabel();
        i2 = new javax.swing.JLabel();
        i3 = new javax.swing.JLabel();
        i4 = new javax.swing.JLabel();
        i5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        l4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Mobile", "Address", "Acc_Number"
            }
        ));
        l4.setIntercellSpacing(new java.awt.Dimension(2, 2));
        l4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                l4MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(l4);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 550, 380));

        jButton5.setBackground(new java.awt.Color(0, 204, 204));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_add_32px.png"))); // NOI18N
        jButton5.setText("Add New Supplier");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 491, 270, 60));

        jButton3.setBackground(new java.awt.Color(0, 204, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_edit_32px.png"))); // NOI18N
        jButton3.setText("Update Selected Supplier");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 491, 290, 60));

        jButton6.setBackground(new java.awt.Color(0, 204, 204));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_close_window_30px.png"))); // NOI18N
        jButton6.setText("Remove Selected Supplier");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 490, -1, 60));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Acc_Number");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 130, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ID");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 80, 40));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Name");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 80, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Mobile");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 80, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Address");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 80, 40));

        txtName.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 290, 40));

        txtMobile.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMobileKeyPressed(evt);
            }
        });
        getContentPane().add(txtMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 290, 40));

        txtAddress.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
        });
        getContentPane().add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 290, 90));

        txtAcc_Number.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtAcc_Number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAcc_NumberKeyPressed(evt);
            }
        });
        getContentPane().add(txtAcc_Number, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 290, 40));

        txtID.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });
        getContentPane().add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 290, 40));

        i1.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        i1.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(i1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 240, 10));

        i2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        i2.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(i2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 230, 10));

        i3.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        i3.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(i3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 220, 10));

        i4.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        i4.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(i4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 220, 10));

        i5.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        i5.setForeground(new java.awt.Color(204, 0, 0));
        getContentPane().add(i5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, 220, 10));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blur2.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //validation
        String iD=txtID.getText().toString();
        String sName=txtName.getText().toString();
        String sMobile=txtMobile.getText().toString();
        String sAdd=txtAddress.getText().toString();
        String Acc=txtAcc_Number.getText().toString();
        
        if(iD.equals("")){
            JOptionPane.showMessageDialog(null,"ID is Mandotory!");
        
        }
        if(sName.equals("")){
            JOptionPane.showMessageDialog(null,"Name is Mandotory!");
        
        }
        if(sMobile.equals("")){
            JOptionPane.showMessageDialog(null,"Mobile number is Mandotory!");
        
        }
        if(sAdd.equals("")){
            JOptionPane.showMessageDialog(null,"Address is Mandotory!");
        }
        if(Acc.equals("")){
            JOptionPane.showMessageDialog(null,"Account number is Mandotory!");
        }
        else{
            JOptionPane.showMessageDialog(null,"Added Successfully");
        }
        
        // add supplier
        int Id = Integer.parseInt(txtID.getText().trim());
        String Name = txtName.getText().trim();
        int telephone = Integer.parseInt(txtMobile.getText().trim());
        String Address = txtName.getText().trim();
        int Acc_Number = Integer.parseInt(txtAcc_Number.getText().trim());

        try {
            // TODO add your handling code here:
            connectionClass management = new connectionClass();//connection object for add product
            try {
                management.connect();

            } catch (Exception e) {
                e.printStackTrace();
            }
            management.insertsupplier(Id, Name, telephone, Address,Acc_Number);
            management.close();
        } catch (SQLException ex) {
            Logger.getLogger(Supplier.class.getName()).log(Level.SEVERE, null, ex);
        }
        model.setRowCount(0);
        try {
            showSupplierTable();
        } catch (Exception ex) {
            Logger.getLogger(Supplier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // supplier update
        int x = JOptionPane.showConfirmDialog(null, "Do You Really Want To Update Supplier");

        int Id = Integer.parseInt(txtID.getText().trim());
        String Name = txtName.getText().trim();
        int telephone = Integer.parseInt(txtMobile.getText().trim());
        String Address = txtName.getText().trim();
        int Acc_Number = Integer.parseInt(txtAcc_Number.getText().trim());
        try {
            connectionClass supplierUpdate = new connectionClass();
            supplierUpdate.connect();
            supplierUpdate.updateSupplier(Name, telephone, Address,Acc_Number,Integer.parseInt(clickValue));
            supplierUpdate.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        model.setRowCount(0);
        try {
            showSupplierTable();
        } catch (Exception ex) {
            Logger.getLogger(Supplier.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // delete supplier
        int x = JOptionPane.showConfirmDialog(null, "Do You Really Want To Delete Supplier");
        
        connectionClass deleteSupplier = new connectionClass();
        try {
            deleteSupplier.connect();
            deleteSupplier.deleteFromSupplier(clickValue);
            deleteSupplier.close();
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
        model.setRowCount(0);
        try {
            showSupplierTable();
        } catch (Exception ex) {
            Logger.getLogger(Supplier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void l4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_l4MouseClicked
        // Mouse clic event on supplier table
        int column = 0;
        int row = l4.getSelectedRow();
        clickValue = l4.getModel().getValueAt(row, column).toString();
        connectionClass table = new connectionClass();
        try {
            table.connect();
        } catch (Exception ex) {
            Logger.getLogger(Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            table.systemConnection();
            table.rs = table.stmt.executeQuery("select s_id,s_name,telephone,address,acc_number from supplier where s_id = '" + clickValue + "'");
            while (table.rs.next()) {
                int id = table.rs.getInt(1);
                String s_name = table.rs.getString(2);
                int telephone = table.rs.getInt(3);
                String address = table.rs.getString(4);
                int acc_number = table.rs.getInt(5);
                System.out.println(id + " " + s_name + " " + telephone + " " + address+" "+acc_number);

                txtID.setText(String.valueOf(id));
                txtName.setText(String.valueOf(s_name));
                txtMobile.setText(String.valueOf(telephone));
                txtAddress.setText(String.valueOf(address));
                txtAcc_Number.setText(String.valueOf(acc_number));
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_l4MouseClicked

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        // TODO add your handling code here
        String z1 = txtID.getText();
        //length of integer
        int length = z1.length();
        
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<4){
            txtID.setEditable(true);
            }
            else
            {
            txtID.setEditable(false);
            //erro message for length
            i1.setText("use maximum 4 numbers");
            }
        }
        else {
            txtID.setEditable(false);
            //error message for data type                               
            i1.setText("Please enter numbers only!");
            
            //to allow backspace and delete
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtID.setEditable(true);
            }else
            {
                txtID.setEditable(false);
            }
        }
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:
        String z2 = txtName.getText();
        //length of integer
        int length = z2.length();
        
        char c = evt.getKeyChar();
        
        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            if(length<20){
            txtName.setEditable(true);
            }
            else
            {
            txtName.setEditable(false);
            //erro message for length
            i2.setText("use maximum 20 letters");
            
            //to allow backspace and delete
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtName.setEditable(true);
            }else
            {
                txtName.setEditable(false);
            }
            }
        }else
        {
            txtName.setEditable(false);
            i2.setText("Please enter letters only!");
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtMobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileKeyPressed
        // TODO add your handling code here:
        String z3 = txtMobile.getText();
        //length of integer
        int length = z3.length();
        
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<10){
            txtMobile.setEditable(true);
            }
            else
            {
            txtMobile.setEditable(false);
            //erro message for length
            i3.setText("use maximum 10 numbers");
            }
        }
        else {
            txtMobile.setEditable(false);
            //error message for data type                               
            i3.setText("Please enter numbers only!");
            
            //to allow backspace and delete
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtMobile.setEditable(true);
            }else
            {
                txtMobile.setEditable(false);
            }
        }
    }//GEN-LAST:event_txtMobileKeyPressed

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        // TODO add your handling code here:
        String z4 = txtAddress.getText();
        //length of integer
        int length = z4.length();
        
        char c = evt.getKeyChar();
        
        if(Character.isLetter(c)||Character.isWhitespace(c)||Character.isISOControl(c)){
            if(length<20){
            txtAddress.setEditable(true);
            }
            else
            {
            txtAddress.setEditable(false);
            //erro message for length
            i4.setText("use maximum 20 letters");
            
            //to allow backspace and delete
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtAddress.setEditable(true);
            }else
            {
                txtAddress.setEditable(false);
            }
            }
        }else
        {
            txtAddress.setEditable(false);
            i4.setText("Please enter letters only!");
        }
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtAcc_NumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAcc_NumberKeyPressed
        // TODO add your handling code here:
        String z4 = txtAcc_Number.getText();
        //length of integer
        int length = z4.length();
        
        char c = evt.getKeyChar();
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){
            if(length<10){
            txtAcc_Number.setEditable(true);
            }
            else
            {
            txtAcc_Number.setEditable(false);
            //erro message for length
            i5.setText("use maximum 10 numbers");
            }
        }
        else {
            txtAcc_Number.setEditable(false);
            //error message for data type                               
            i5.setText("Please enter numbers only!");
            
            //to allow backspace and delete
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE){
                txtAcc_Number.setEditable(true);
            }else
            {
                txtAcc_Number.setEditable(false);
            }
        }
    }//GEN-LAST:event_txtAcc_NumberKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel i1;
    private javax.swing.JLabel i2;
    private javax.swing.JLabel i3;
    private javax.swing.JLabel i4;
    private javax.swing.JLabel i5;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable l4;
    private javax.swing.JTextField txtAcc_Number;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
